/*
Network as Code

Manipulate network conditions via simplified REST calls

API version: 2
Contact: todd.levi@nokia.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datarepository

import (
	"encoding/json"
)

// SubscriberDetails struct for SubscriberDetails
type SubscriberDetails struct {
	Id *string `json:"id,omitempty" yaml:"id" bson:"id" mapstructure:"Id"`
	Imsi *string `json:"imsi,omitempty" yaml:"imsi" bson:"imsi" mapstructure:"Imsi"`
	Msisdn *string `json:"msisdn,omitempty" yaml:"msisdn" bson:"msisdn" mapstructure:"Msisdn"`
}

// NewSubscriberDetails instantiates a new SubscriberDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberDetails() *SubscriberDetails {
	this := SubscriberDetails{}
	return &this
}

// NewSubscriberDetailsWithDefaults instantiates a new SubscriberDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberDetailsWithDefaults() *SubscriberDetails {
	this := SubscriberDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriberDetails) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberDetails) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriberDetails) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubscriberDetails) SetId(v string) {
	o.Id = &v
}

// GetImsi returns the Imsi field value if set, zero value otherwise.
func (o *SubscriberDetails) GetImsi() string {
	if o == nil || o.Imsi == nil {
		var ret string
		return ret
	}
	return *o.Imsi
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberDetails) GetImsiOk() (*string, bool) {
	if o == nil || o.Imsi == nil {
		return nil, false
	}
	return o.Imsi, true
}

// HasImsi returns a boolean if a field has been set.
func (o *SubscriberDetails) HasImsi() bool {
	if o != nil && o.Imsi != nil {
		return true
	}

	return false
}

// SetImsi gets a reference to the given string and assigns it to the Imsi field.
func (o *SubscriberDetails) SetImsi(v string) {
	o.Imsi = &v
}

// GetMsisdn returns the Msisdn field value if set, zero value otherwise.
func (o *SubscriberDetails) GetMsisdn() string {
	if o == nil || o.Msisdn == nil {
		var ret string
		return ret
	}
	return *o.Msisdn
}

// GetMsisdnOk returns a tuple with the Msisdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberDetails) GetMsisdnOk() (*string, bool) {
	if o == nil || o.Msisdn == nil {
		return nil, false
	}
	return o.Msisdn, true
}

// HasMsisdn returns a boolean if a field has been set.
func (o *SubscriberDetails) HasMsisdn() bool {
	if o != nil && o.Msisdn != nil {
		return true
	}

	return false
}

// SetMsisdn gets a reference to the given string and assigns it to the Msisdn field.
func (o *SubscriberDetails) SetMsisdn(v string) {
	o.Msisdn = &v
}

func (o SubscriberDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Imsi != nil {
		toSerialize["imsi"] = o.Imsi
	}
	if o.Msisdn != nil {
		toSerialize["msisdn"] = o.Msisdn
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriberDetails struct {
	value *SubscriberDetails
	isSet bool
}

func (v NullableSubscriberDetails) Get() *SubscriberDetails {
	return v.value
}

func (v *NullableSubscriberDetails) Set(val *SubscriberDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberDetails(val *SubscriberDetails) *NullableSubscriberDetails {
	return &NullableSubscriberDetails{value: val, isSet: true}
}

func (v NullableSubscriberDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


