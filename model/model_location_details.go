/*
Network as Code

Manipulate network conditions via simplified REST calls

API version: 2
Contact: todd.levi@nokia.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datarepository

import (
	"encoding/json"
)

// LocationDetails struct for LocationDetails
type LocationDetails struct {
	AgeOfLocationInfo *string `json:"ageOfLocationInfo,omitempty" yaml:"ageOfLocationInfo" bson:"ageOfLocationInfo" mapstructure:"AgeOfLocationInfo"`
	TrackingAreaId *string `json:"trackingAreaId,omitempty" yaml:"trackingAreaId" bson:"trackingAreaId" mapstructure:"TrackingAreaId"`
	PlmnId *string `json:"plmnId,omitempty" yaml:"plmnId" bson:"plmnId" mapstructure:"PlmnId"`
	Lat *string `json:"lat,omitempty" yaml:"lat" bson:"lat" mapstructure:"Lat"`
	Long *string `json:"long,omitempty" yaml:"long" bson:"long" mapstructure:"Long"`
	Elev *string `json:"elev,omitempty" yaml:"elev" bson:"elev" mapstructure:"Elev"`
}

// NewLocationDetails instantiates a new LocationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationDetails() *LocationDetails {
	this := LocationDetails{}
	return &this
}

// NewLocationDetailsWithDefaults instantiates a new LocationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationDetailsWithDefaults() *LocationDetails {
	this := LocationDetails{}
	return &this
}

// GetAgeOfLocationInfo returns the AgeOfLocationInfo field value if set, zero value otherwise.
func (o *LocationDetails) GetAgeOfLocationInfo() string {
	if o == nil || o.AgeOfLocationInfo == nil {
		var ret string
		return ret
	}
	return *o.AgeOfLocationInfo
}

// GetAgeOfLocationInfoOk returns a tuple with the AgeOfLocationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetAgeOfLocationInfoOk() (*string, bool) {
	if o == nil || o.AgeOfLocationInfo == nil {
		return nil, false
	}
	return o.AgeOfLocationInfo, true
}

// HasAgeOfLocationInfo returns a boolean if a field has been set.
func (o *LocationDetails) HasAgeOfLocationInfo() bool {
	if o != nil && o.AgeOfLocationInfo != nil {
		return true
	}

	return false
}

// SetAgeOfLocationInfo gets a reference to the given string and assigns it to the AgeOfLocationInfo field.
func (o *LocationDetails) SetAgeOfLocationInfo(v string) {
	o.AgeOfLocationInfo = &v
}

// GetTrackingAreaId returns the TrackingAreaId field value if set, zero value otherwise.
func (o *LocationDetails) GetTrackingAreaId() string {
	if o == nil || o.TrackingAreaId == nil {
		var ret string
		return ret
	}
	return *o.TrackingAreaId
}

// GetTrackingAreaIdOk returns a tuple with the TrackingAreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetTrackingAreaIdOk() (*string, bool) {
	if o == nil || o.TrackingAreaId == nil {
		return nil, false
	}
	return o.TrackingAreaId, true
}

// HasTrackingAreaId returns a boolean if a field has been set.
func (o *LocationDetails) HasTrackingAreaId() bool {
	if o != nil && o.TrackingAreaId != nil {
		return true
	}

	return false
}

// SetTrackingAreaId gets a reference to the given string and assigns it to the TrackingAreaId field.
func (o *LocationDetails) SetTrackingAreaId(v string) {
	o.TrackingAreaId = &v
}

// GetPlmnId returns the PlmnId field value if set, zero value otherwise.
func (o *LocationDetails) GetPlmnId() string {
	if o == nil || o.PlmnId == nil {
		var ret string
		return ret
	}
	return *o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetPlmnIdOk() (*string, bool) {
	if o == nil || o.PlmnId == nil {
		return nil, false
	}
	return o.PlmnId, true
}

// HasPlmnId returns a boolean if a field has been set.
func (o *LocationDetails) HasPlmnId() bool {
	if o != nil && o.PlmnId != nil {
		return true
	}

	return false
}

// SetPlmnId gets a reference to the given string and assigns it to the PlmnId field.
func (o *LocationDetails) SetPlmnId(v string) {
	o.PlmnId = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *LocationDetails) GetLat() string {
	if o == nil || o.Lat == nil {
		var ret string
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetLatOk() (*string, bool) {
	if o == nil || o.Lat == nil {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *LocationDetails) HasLat() bool {
	if o != nil && o.Lat != nil {
		return true
	}

	return false
}

// SetLat gets a reference to the given string and assigns it to the Lat field.
func (o *LocationDetails) SetLat(v string) {
	o.Lat = &v
}

// GetLong returns the Long field value if set, zero value otherwise.
func (o *LocationDetails) GetLong() string {
	if o == nil || o.Long == nil {
		var ret string
		return ret
	}
	return *o.Long
}

// GetLongOk returns a tuple with the Long field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetLongOk() (*string, bool) {
	if o == nil || o.Long == nil {
		return nil, false
	}
	return o.Long, true
}

// HasLong returns a boolean if a field has been set.
func (o *LocationDetails) HasLong() bool {
	if o != nil && o.Long != nil {
		return true
	}

	return false
}

// SetLong gets a reference to the given string and assigns it to the Long field.
func (o *LocationDetails) SetLong(v string) {
	o.Long = &v
}

// GetElev returns the Elev field value if set, zero value otherwise.
func (o *LocationDetails) GetElev() string {
	if o == nil || o.Elev == nil {
		var ret string
		return ret
	}
	return *o.Elev
}

// GetElevOk returns a tuple with the Elev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationDetails) GetElevOk() (*string, bool) {
	if o == nil || o.Elev == nil {
		return nil, false
	}
	return o.Elev, true
}

// HasElev returns a boolean if a field has been set.
func (o *LocationDetails) HasElev() bool {
	if o != nil && o.Elev != nil {
		return true
	}

	return false
}

// SetElev gets a reference to the given string and assigns it to the Elev field.
func (o *LocationDetails) SetElev(v string) {
	o.Elev = &v
}

func (o LocationDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgeOfLocationInfo != nil {
		toSerialize["ageOfLocationInfo"] = o.AgeOfLocationInfo
	}
	if o.TrackingAreaId != nil {
		toSerialize["trackingAreaId"] = o.TrackingAreaId
	}
	if o.PlmnId != nil {
		toSerialize["plmnId"] = o.PlmnId
	}
	if o.Lat != nil {
		toSerialize["lat"] = o.Lat
	}
	if o.Long != nil {
		toSerialize["long"] = o.Long
	}
	if o.Elev != nil {
		toSerialize["elev"] = o.Elev
	}
	return json.Marshal(toSerialize)
}

type NullableLocationDetails struct {
	value *LocationDetails
	isSet bool
}

func (v NullableLocationDetails) Get() *LocationDetails {
	return v.value
}

func (v *NullableLocationDetails) Set(val *LocationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationDetails(val *LocationDetails) *NullableLocationDetails {
	return &NullableLocationDetails{value: val, isSet: true}
}

func (v NullableLocationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


