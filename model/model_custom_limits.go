/*
Network as Code

Manipulate network conditions via simplified REST calls

API version: 2
Contact: todd.levi@nokia.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datarepository

import (
	"encoding/json"
)

// CustomLimits struct for CustomLimits
type CustomLimits struct {
	Id *string `json:"id,omitempty" yaml:"id" bson:"id" mapstructure:"Id"`
	// Upload limit in bits per second
	Upload *int32 `json:"upload,omitempty" yaml:"upload" bson:"upload" mapstructure:"Upload"`
	// Download limit in bits per second
	Download *int32 `json:"download,omitempty" yaml:"download" bson:"download" mapstructure:"Download"`
}

// NewCustomLimits instantiates a new CustomLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomLimits() *CustomLimits {
	this := CustomLimits{}
	return &this
}

// NewCustomLimitsWithDefaults instantiates a new CustomLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomLimitsWithDefaults() *CustomLimits {
	this := CustomLimits{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomLimits) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLimits) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomLimits) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomLimits) SetId(v string) {
	o.Id = &v
}

// GetUpload returns the Upload field value if set, zero value otherwise.
func (o *CustomLimits) GetUpload() int32 {
	if o == nil || o.Upload == nil {
		var ret int32
		return ret
	}
	return *o.Upload
}

// GetUploadOk returns a tuple with the Upload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLimits) GetUploadOk() (*int32, bool) {
	if o == nil || o.Upload == nil {
		return nil, false
	}
	return o.Upload, true
}

// HasUpload returns a boolean if a field has been set.
func (o *CustomLimits) HasUpload() bool {
	if o != nil && o.Upload != nil {
		return true
	}

	return false
}

// SetUpload gets a reference to the given int32 and assigns it to the Upload field.
func (o *CustomLimits) SetUpload(v int32) {
	o.Upload = &v
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *CustomLimits) GetDownload() int32 {
	if o == nil || o.Download == nil {
		var ret int32
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLimits) GetDownloadOk() (*int32, bool) {
	if o == nil || o.Download == nil {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *CustomLimits) HasDownload() bool {
	if o != nil && o.Download != nil {
		return true
	}

	return false
}

// SetDownload gets a reference to the given int32 and assigns it to the Download field.
func (o *CustomLimits) SetDownload(v int32) {
	o.Download = &v
}

func (o CustomLimits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Upload != nil {
		toSerialize["upload"] = o.Upload
	}
	if o.Download != nil {
		toSerialize["download"] = o.Download
	}
	return json.Marshal(toSerialize)
}

type NullableCustomLimits struct {
	value *CustomLimits
	isSet bool
}

func (v NullableCustomLimits) Get() *CustomLimits {
	return v.value
}

func (v *NullableCustomLimits) Set(val *CustomLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomLimits(val *CustomLimits) *NullableCustomLimits {
	return &NullableCustomLimits{value: val, isSet: true}
}

func (v NullableCustomLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


