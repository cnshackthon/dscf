/*
 * Ndscf_DataRepository
 *
 * Ndscf Data Repository Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package datarepository

import (
	//"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// SubscriberApiController binds http requests to an api service and writes the service results to the http response
type SubscriberApiController struct {
	service SubscriberApiServicer
	errorHandler ErrorHandler
}

// SubscriberApiOption for how the controller is set up.
type SubscriberApiOption func(*SubscriberApiController)

// WithSubscriberApiErrorHandler inject ErrorHandler into controller
func WithSubscriberApiErrorHandler(h ErrorHandler) SubscriberApiOption {
	return func(c *SubscriberApiController) {
		c.errorHandler = h
	}
}

// NewSubscriberApiController creates a default api controller
func NewSubscriberApiController(s SubscriberApiServicer, opts ...SubscriberApiOption) Router {
	controller := &SubscriberApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all of the api route for the SubscriberApiController
func (c *SubscriberApiController) Routes() Routes {
	return Routes{ 
		{
			"GetSubIdLocation",
			strings.ToUpper("Post"),
			"/ndscf/v1/location/{subId}",
			c.GetSubIdLocation,
		},
	}
}

// GetSubIdLocation - Get last reported location
func (c *SubscriberApiController) GetSubIdLocation(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	subIdParam := params["subId"]
	
	result, err := c.service.GetSubIdLocation(r.Context(), subIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
